addonName = "Dynamic Light Controller - Entities"
import IsValid, GetClass from FindMetaTable( "Entity" )
PRE_HOOK = PRE_HOOK or HOOK_MONITOR_HIGH
CreateClientConVar = CreateClientConVar
entities = list.GetForEdit( addonName )
import CreateClientside from ents
import TraceLine from util
import Simple from timer
import Add from hook

traceResult = {}
trace = { output: traceResult }

blacklist = {}

do

    fileName = "dlight_controller_entities_blacklist.json"
    unless file.Exists( fileName, "DATA" )
        file.Write( fileName, util.TableToJSON( { "example_entity_class1", "example_entity_class2" }, true ) )

    file.AsyncRead fileName, "DATA", ( _, __, status, data ) ->
        if status ~= FSASYNC_OK
            return

        tbl = util.JSONToTable( data )
        if tbl == nil
            return

        for className in *tbl
            blacklist[ className ] = true

do

    dlight_controllers_entities = CreateClientConVar( "dlight_controllers_entities", "1", true, false, "Enables creation dynamic light emitters for game entities.", 0, 1 )
    isfunction = isfunction

    Add( "NotifyShouldTransmit", addonName, ( entity, shouldtransmit ) ->
        if shouldtransmit and dlight_controllers_entities\GetBool! and not entity.DLightController
            dlight = entity.__dlight
            if dlight and IsValid( dlight )
                return

            className = GetClass( entity )
            if blacklist[ className ]
                return

            func = entities[ className ]
            unless func and isfunction( func )
                return

            dlight = CreateClientside( "dlight_controller" )
            unless dlight and IsValid( dlight )
                return

            dlight\SetEnabled( true )

            if func( entity, dlight ) == false
                dlight\Remove!
                return

            entity.__dlight = dlight
            dlight\Spawn!
            return

        dlight = entity.__dlight
        if dlight and IsValid( dlight )
            dlight\Remove!

    PRE_HOOK )

    Add( "OnEntityCreated", addonName, ( entity ) ->
        if not dlight_controllers_entities\GetBool! or entity.DLightController
            return

        dlight = entity.__dlight
        if dlight and IsValid( dlight )
            return

        className = GetClass( entity )
        if blacklist[ className ]
            return

        func = entities[ className ]
        unless func and isfunction( func )
            return

        dlight = CreateClientside( "dlight_controller" )
        unless dlight and IsValid( dlight )
            return

        dlight\SetEnabled( true )

        if func( entity, dlight ) == false
            dlight\Remove!
            return

        entity.__dlight = dlight
        dlight\Spawn!
        return

    PRE_HOOK )

    Add( "PlayerSwitchWeapon", addonName, ( _, __, entity ) ->
        if entity.DLightController
            return

        dlight = entity.__dlight
        if dlight and IsValid( dlight )
            dlight\Remove!

        bdlight = entity.__beam_dlight
        if bdlight and IsValid( dlight )
            bdlight\Remove!

        unless dlight_controllers_entities\GetBool! and IsValid( entity )
            return

        className = GetClass( entity )
        if blacklist[ className ]
            return

        func = entities[ className ]
        unless func and isfunction( func )
            return

        dlight = CreateClientside( "dlight_controller" )
        unless dlight and IsValid( dlight )
            return

        dlight\SetEnabled( true )

        if func( entity, dlight ) == false
            dlight\Remove!
            return

        entity.__dlight = dlight
        dlight\Spawn!
        return

    PRE_HOOK )

Add( "EntityRemoved", addonName, ( entity, fullUpdate ) ->
    dlight = entity.__dlight
    if dlight
        if IsValid( dlight )
            dlight\Remove!

        entity.__dlight = nil

    dlight = entity.m_eFireDLight
    if dlight
        if IsValid( dlight )
            dlight\Remove!

        entity.m_eFireDLight = nil

    if entity\IsPlayer!
        dlight = entity.__beam_dlight
        if dlight
            if IsValid( dlight )
                dlight\Remove!

            entity.__beam_dlight = nil

PRE_HOOK )

do

    physgun_maxrange = GetConVar( "physgun_maxrange" )

    Add "DrawPhysgunBeam", addonName .. " - Physgun", ( ply, wep, enabled, entity, physBone, localPos ) ->
        bdlight = wep.__beam_dlight
        unless bdlight and IsValid( bdlight )
            return

        bdlight\SetEnabled( enabled )

        unless enabled
            return

        bdlight\SetLightColor( ply\GetWeaponColor! )

        unless IsValid( entity )
            trace.start = ply\GetShootPos!
            trace.endpos = trace.start + ply\GetAimVector! * physgun_maxrange\GetInt!
            trace.filter = ply
            TraceLine( trace )

            bdlight\SetPos( traceResult.HitPos + traceResult.HitNormal )
            return

        if physBone ~= 0
            matrix = entity\GetBoneMatrix( entity\TranslatePhysBoneToBone( physBone ) )
            if matrix
                bdlight\SetPos( LocalToWorld( localPos, angle_zero, matrix\GetTranslation!, matrix\GetAngles! ) )
                return

        bdlight\SetPos( entity\LocalToWorld( localPos ) )
        return

do

    dlight_controllers_env_fire = CreateClientConVar( "dlight_controllers_env_fire", "0", true, false, "Enables creation dynamic light emitters for env_fire.", 0, 1 )

    entities[ "env_fire" ] = ( entity, dlight ) ->
        unless dlight_controllers_env_fire\GetBool!
            return false

        dlight\SetSprite( "sprites/gmdm_pickups/light" )
        dlight\SetLightColor( 255, 100, 0 )
        dlight\SetSpriteAlpha( 255 )
        dlight\SetSpriteScale( 0.5 )
        dlight\SetBrightness( 1 )
        dlight\SetRadius( 256 )
        dlight\SetStyle( 5 )

        dlight.LightThink = ->
            if IsValid( entity )
                dlight\SetPos( entity\GetPos! )

        return true

do

    offset = Vector( 3, 0, 6 )

    entities[ "item_battery" ] = ( entity, dlight ) ->
        dlight\SetRadius( 32 )
        dlight\SetParent( entity )
        dlight\SetBrightness( 0.5 )
        dlight\SetSpriteAlpha( 5 )
        dlight\SetLightColor( 0, 255, 255 )
        dlight\SetLocalPos( offset )
        dlight\SetSprite( "sprites/gmdm_pickups/light" )
        return true

do

    offset = Vector( -10, 0, 0 )

    entities[ "hunter_flechette" ] = ( entity, dlight ) ->
        dlight\SetRadius( 48 )
        dlight\SetParent( entity )
        dlight\SetBrightness( 0.5 )
        dlight\SetLightColor( 0, 255, 255 )
        dlight\SetLocalPos( offset )
        return true

do

    offset = Vector( 4, 4, 4 )

    entities[ "item_healthkit" ] = ( entity, dlight ) ->
        dlight\SetRadius( 48 )
        dlight\SetParent( entity )
        dlight\SetSpriteAlpha( 15 )
        dlight\SetBrightness( 0.25 )
        dlight\SetLightColor( 60, 255, 0 )
        dlight\SetLocalPos( offset )
        dlight\SetSprite( "sprites/gmdm_pickups/light" )
        return true

entities[ "item_healthvial" ] = ( entity, dlight ) ->
    dlight\SetRadius( 32 )
    dlight\SetParent( entity )
    dlight\SetBrightness( 0.5 )
    dlight\SetSpriteAlpha( 25 )
    dlight\SetLightColor( 60, 255, 0 )
    dlight\SetLocalPos( entity\OBBCenter! )
    dlight\SetSprite( "sprites/gmdm_pickups/light" )
    return true

entities[ "item_ammo_ar2" ] = ( entity, dlight ) ->
    dlight\SetRadius( 32 )
    dlight\SetParent( entity )
    dlight\SetBrightness( 0.5 )
    dlight\SetLightColor( 0, 255, 255 )
    dlight\SetLocalPos( entity\OBBCenter! )
    return true

entities[ "item_ammo_ar2_large" ] = ( entity, dlight ) ->
    dlight\SetRadius( 32 )
    dlight\SetParent( entity )
    dlight\SetBrightness( 0.5 )
    dlight\SetLightColor( 0, 255, 255 )
    dlight\SetLocalPos( entity\OBBCenter! )
    return true

entities[ "npc_rollermine"] = ( entity, dlight ) ->
    dlight\SetRadius( 32 )
    dlight\SetParent( entity )
    dlight\SetBrightness( 0.5 )
    dlight\SetLightColor( 0, 255, 255 )
    dlight\SetLocalPos( entity\OBBCenter! )
    return true

entities[ "weapon_striderbuster"] = ( entity, dlight ) ->
    dlight\SetStyle( 12 )
    dlight\SetRadius( 48 )
    dlight\SetParent( entity )
    dlight\SetBrightness( 0.25 )
    dlight\SetSpriteAlpha( 100 )
    dlight\SetLightColor( 0, 255, 255 )
    dlight\SetLocalPos( entity\OBBCenter! )
    dlight\SetSprite( "sprites/gmdm_pickups/light" )
    return true

entities[ "grenade_helicopter" ] = ( entity, dlight ) ->
    dlight\SetRadius( 64 )
    dlight\SetParent( entity )
    dlight\SetBrightness( 0.5 )
    dlight\SetSpriteAlpha( 100 )
    dlight\SetLightColor( 255, 0, 0 )
    dlight\SetLocalPos( entity\OBBCenter! )
    dlight\SetSprite( "sprites/gmdm_pickups/light" )
    return true

entities[ "env_rockettrail" ] = ( entity, dlight ) ->
    dlight\SetRadius( 256 )
    dlight\SetBrightness( 2 )
    dlight\SetParent( entity )
    dlight\SetLightColor( 255, 100, 0 )
    dlight\SetLocalPos( entity\OBBCenter! )
    return true

entities[ "item_ammo_ar2_altfire" ] = ( entity, dlight ) ->
    dlight\SetStyle( 5 )
    dlight\SetRadius( 32 )
    dlight\SetParent( entity )
    dlight\SetBrightness( 0.5 )
    dlight\SetSpriteAlpha( 50 )
    dlight\SetLightColor( 255, 200, 0 )
    dlight\SetLocalPos( entity\OBBCenter! )
    dlight\SetSprite( "sprites/gmdm_pickups/light" )
    return true

entities[ "prop_combine_ball" ] = ( entity, dlight ) ->
    dlight\SetStyle( 5 )
    dlight\SetRadius( 512 )
    dlight\SetParent( entity )
    dlight\SetBrightness( 2 )
    dlight\SetSpriteScale( 0.15 )
    dlight\SetLightColor( 255, 240, 150 )
    dlight\SetLocalPos( entity\OBBCenter! )
    dlight\SetSprite( "sprites/gmdm_pickups/light" )
    return true

do

    :ceil = math

    entities[ "sent_ball" ] = ( entity, dlight ) ->
        dlight\SetRadius( 32 )
        dlight\SetBrightness( 2 )
        dlight\SetParent( entity )
        dlight\SetLocalPos( entity\OBBCenter! )

        dlight.LightThink = ->
            unless IsValid( entity )
                dlight\Remove!
                return

            dlight\SetRadius( ceil( entity\GetBallSize! * 1.5 ) )
            dlight\SetLightColor( entity\GetBallColor! )

        return true

entities[ "env_sprite" ] = ( entity, dlight ) ->
    parent = entity\GetParent!
    unless parent and IsValid( parent )
        return false

    old = parent.__dlight
    if old and IsValid( old )
        old\Remove!

    parent.__dlight = dlight
    dlight\SetParent( entity )
    offset = entity\OBBCenter!

    className = GetClass( parent )
    if blacklist[ className ]
        return false

    if className == "crossbow_bolt"
        dlight\SetLightColor( 255, 100, 0 )
        dlight\SetBrightness( 0.25 )
        dlight\SetRadius( 32 )

    elseif className == "combine_mine"
        dlight\SetLightColor( entity\GetColor! )
        dlight\SetBrightness( 1 )
        dlight\SetRadius( 32 )
        offset[ 3 ] += 2

    elseif className == "npc_grenade_frag"
        dlight\SetLightColor( 255, 0, 0 )
        dlight\SetBrightness( 1 )
        dlight\SetRadius( 32 )

    elseif className == "npc_manhack"
        dlight\SetLightColor( 255, 0, 0 )
        dlight\SetBrightness( 0.25 )
        dlight\SetRadius( 48 )

    elseif className == "npc_cscanner"
        dlight\SetLightColor( 255, 255, 255 )
        dlight\SetBrightness( 0.5 )
        dlight\SetRadius( 64 )

    elseif className == "npc_satchel"
        dlight\SetSprite( "sprites/gmdm_pickups/light" )
        dlight\SetLightColor( 255, 0, 0 )
        dlight\SetSpriteAlpha( 50 )
        dlight\SetBrightness( 0.5 )
        dlight\SetRadius( 32 )

    else
        dlight\SetLightColor( entity\GetColor! )
        dlight\SetBrightness( 1 )
        dlight\SetRadius( 32 )

    dlight\SetLocalPos( offset )
    return true

do

    dlight_controllers_bullets = CreateClientConVar( "dlight_controllers_bullets", "1", true, false, "Enables creation of dynamic light emitters when entities fire bullets.", 0, 1 )
    dlight_controllers_bullets_brightness = CreateClientConVar( "dlight_controllers_bullets_brightness", "0.1", true, false, "", 0, 10 )
    dlight_controllers_bullets_lifetime = CreateClientConVar( "dlight_controllers_bullets_lifetime", "0.2", true, false, "", 0, 5 )
    dlight_controllers_bullets_radius = CreateClientConVar( "dlight_controllers_bullets_radius", "64", true, false, "", 16, 4096 )
    dlight_controllers_bullets_color = CreateClientConVar( "dlight_controllers_bullets_color", "255 100 0", true, false, "" )

    r, g, b = unpack( string.Split( dlight_controllers_bullets_color\GetString!, " " ), nil )
    cvars.AddChangeCallback( dlight_controllers_bullets_color\GetName!, ( _, __, value ) ->
        r, g, b = unpack( string.Split( value, " " ), nil )
    addonName )

    Add( "EntityFireBullets", addonName, ( data ) =>
        unless dlight_controllers_bullets\GetBool!
            return

        Simple 0, ->
            trace.start = data.Src
            trace.endpos = data.Src + data.Dir * data.Distance
            trace.filter = data.Entity
            TraceLine( trace )

            dlight = CreateClientside( "dlight_controller" )
            unless dlight and IsValid( dlight )
                return

            dlight\SetLifetime( dlight_controllers_bullets_lifetime\GetFloat! )
            dlight\SetPos( traceResult.HitPos + traceResult.HitNormal * 2 )
            dlight\SetLightColor( r or 255, g or 100, b or 0 )
            dlight\SetParent( traceResult.Entity )
            dlight\SetBrightness( 0.1 )
            dlight\SetEnabled( true )
            dlight\SetRadius( 16 )
            dlight\Spawn!
            return

        dlight = CreateClientside( "dlight_controller" )
        unless dlight and IsValid( dlight )
            return

        dlight\SetBrightness( dlight_controllers_bullets_brightness\GetFloat! )
        dlight\SetLifetime( dlight_controllers_bullets_lifetime\GetFloat! )
        dlight\SetRadius( dlight_controllers_bullets_radius\GetInt! )
        dlight\SetLightColor( r or 255, g or 100, b or 0 )
        dlight\SetEnabled( true )
        dlight\SetPos( data.Src )
        dlight\SetParent( @ )
        dlight\Spawn!
        return

    PRE_HOOK )

do

    import Iterator from ents

    hook.Add "Think", addonName, ->
        for _, entity in Iterator!
            if entity\IsOnFire!
                dlight = entity.m_eFireDLight
                if dlight and IsValid( dlight )
                    continue

                dlight = CreateClientside( "dlight_controller" )
                unless dlight and IsValid( dlight )
                    return

                entity.m_eFireDLight = dlight

                dlight\SetStyle( 5 )
                dlight\SetRadius( 128 )
                dlight\SetBrightness( 0.5 )
                dlight\SetEnabled( true )
                dlight\SetParent( entity )
                dlight\SetLightColor( 255, 100, 0 )
                dlight\SetLocalPos( entity\OBBCenter! )
                dlight\Spawn!
                continue

            dlight = entity.m_eFireDLight
            if dlight
                if IsValid( dlight )
                    dlight\Remove!

                dlight.m_eFireDLight = nil

do

    dlight_controllers_explosions = CreateClientConVar( "dlight_controllers_explosions", "1", true, false, "Enables creation of dynamic light emitters when something explode.", 0, 1 )
    dlight_controllers_explosions_brightness = CreateClientConVar( "dlight_controllers_explosions_brightness", "2", true, false, "", 0, 10 )
    dlight_controllers_explosions_lifetime = CreateClientConVar( "dlight_controllers_explosions_lifetime", "0.2", true, false, "", 0, 5 )
    dlight_controllers_explosions_radius = CreateClientConVar( "dlight_controllers_explosions_radius", "512", true, false, "", 16, 4096 )
    dlight_controllers_explosions_color = CreateClientConVar( "dlight_controllers_explosions_color", "255 100 0", true, false, "" )

    r, g, b = unpack( string.Split( dlight_controllers_explosions_color\GetString!, " " ) )
    cvars.AddChangeCallback( dlight_controllers_explosions_color\GetName!, ( _, __, value ) ->
        r, g, b = unpack( string.Split( value, " " ) )
    addonName )

    Add( "EntityEmitSound", addonName, ( data ) ->
        unless data.OriginalSoundName == "BaseExplosionEffect.Sound" and dlight_controllers_explosions\GetBool!
            return

        dlight = CreateClientside( "dlight_controller" )
        unless dlight and IsValid( dlight )
            return

        dlight\SetBrightness( dlight_controllers_explosions_brightness\GetFloat! )
        dlight\SetLifetime( dlight_controllers_explosions_lifetime\GetFloat! )
        dlight\SetRadius( dlight_controllers_explosions_radius\GetInt! )
        dlight\SetLightColor( r, g, b )
        dlight\SetPos( data.Pos )
        dlight\SetEnabled( true )
        dlight\Spawn!
        return

    PRE_HOOK )

do

    offset = Vector( 16, -3, 5 )
    LocalToWorld = LocalToWorld
    angle_zero = angle_zero
    attachmentID = 0

    entities[ "weapon_physgun" ] = ( entity, dlight ) ->
        bdlight = CreateClientside( "dlight_controller" )
        entity.__beam_dlight = bdlight
        bdlight\SetBrightness( 0.01 )
        bdlight\SetRadius( 128 )
        bdlight\SetStyle( 5 )
        bdlight\Spawn!

        dlight\SetLightColor( Vector( cvars.String( "cl_weaponcolor" ) ) )
        dlight\SetBrightness( 0.5 )
        dlight\SetRadius( 64 )
        dlight\SetStyle( 5 )

        dlight.LightThink = ->
            unless IsValid( entity )
                dlight\Remove!
                return

            owner = entity\GetOwner!
            unless owner and IsValid( owner ) and owner\IsPlayer!
                dlight\SetPos( entity\WorldSpaceCenter! )
                dlight\SetEnabled( true )
                return

            dlight\SetEnabled( owner\GetActiveWeapon! == entity )
            dlight\SetLightColor( owner\GetWeaponColor! )

            attachmentID = owner\LookupAttachment( "anim_attachment_RH" )
            if attachmentID > 0
                attachment = owner\GetAttachment( attachmentID )
                dlight\SetPos( LocalToWorld( offset, angle_zero, attachment.Pos, attachment.Ang ) )
            else
                dlight\SetPos( owner\GetShootPos! )

        return true

    entities[ "weapon_physcannon" ] = ( entity, dlight ) ->
        dlight\SetLightColor( 255, 200, 0 )
        dlight\SetBrightness( 0.5 )
        dlight\SetRadius( 64 )
        dlight\SetStyle( 5 )

        dlight.LightThink = ->
            unless IsValid( entity )
                dlight\Remove!
                return

            owner = entity\GetOwner!
            unless owner and IsValid( owner ) and owner\IsPlayer!
                dlight\SetPos( entity\WorldSpaceCenter! )
                dlight\SetEnabled( true )
                return

            dlight\SetEnabled( owner\GetActiveWeapon! == entity )

            attachmentID = owner\LookupAttachment( "anim_attachment_RH" )
            if attachmentID > 0
                attachment = owner\GetAttachment( attachmentID )
                dlight\SetPos( LocalToWorld( offset, angle_zero, attachment.Pos, attachment.Ang ) )
            else
                dlight\SetPos( owner\GetShootPos! )

        return true

    entities[ "weapon_crossbow" ] = ( entity, dlight ) ->
        dlight\SetLightColor( 255, 200, 0 )
        dlight\SetBrightness( 0.5 )
        dlight\SetRadius( 32 )

        dlight.LightThink = ->
            unless IsValid( entity )
                dlight\Remove!
                return

            owner = entity\GetOwner!
            unless owner and IsValid( owner ) and owner\IsPlayer!
                dlight\SetPos( entity\WorldSpaceCenter! )
                dlight\SetEnabled( true )
                return

            dlight\SetEnabled( owner\GetActiveWeapon! == entity )

            attachmentID = owner\LookupAttachment( "anim_attachment_RH" )
            if attachmentID > 0
                attachment = owner\GetAttachment( attachmentID )
                dlight\SetPos( LocalToWorld( offset, angle_zero, attachment.Pos, attachment.Ang ) )
            else
                dlight\SetPos( owner\GetShootPos! )

            r, g = dlight\GetRed!, dlight\GetGreen!
            if entity\Clip1! == 0
                if r ~= 0
                    dlight\SetRed( 0 )

                if g ~= 0
                    dlight\SetGreen( 0 )

                return

            if r ~= 255
                dlight\SetRed( 255 )

            if g ~= 200
                dlight\SetGreen( 200 )

        return true

    entities[ "weapon_medkit" ] = ( entity, dlight ) ->
        dlight\SetLightColor( 60, 255, 0 )
        dlight\SetBrightness( 1 )
        dlight\SetRadius( 48 )
        dlight\SetStyle( 5 )

        dlight.LightThink = ->
            unless IsValid( entity )
                dlight\Remove!
                return

            owner = entity\GetOwner!
            unless owner and IsValid( owner ) and owner\IsPlayer!
                dlight\SetPos( entity\WorldSpaceCenter! )
                dlight\SetEnabled( true )
                return

            dlight\SetEnabled( owner\GetActiveWeapon! == entity )

            attachmentID = owner\LookupAttachment( "anim_attachment_RH" )
            if attachmentID > 0
                attachment = owner\GetAttachment( attachmentID )
                dlight\SetPos( LocalToWorld( offset, angle_zero, attachment.Pos, attachment.Ang ) )
            else
                dlight\SetPos( owner\GetShootPos! )

            fraction = entity\Clip1! / entity\GetMaxClip1!
            dlight\SetRed( Lerp( fraction, 0, 60 ) )
            dlight\SetGreen( Lerp( fraction, 0, 255 ) )

        return true

do

    offset1 = Vector( 8, -3, 6 )
    offset2 = Vector( 8, -2, 2 )
    frac = 0

    entities[ "item_suitcharger" ] = ( entity, dlight ) ->
        dlight\SetRadius( 32 )
        dlight\SetParent( entity )
        dlight\SetBrightness( 0.5 )
        dlight\SetLightColor( 255, 200, 0 )
        dlight\SetLocalPos( offset1 )

        dlight.LightThink = ->
            unless IsValid( entity )
                dlight\Remove!
                return

            frac = 1 - entity\GetCycle!
            dlight\SetLightColor( 255 * frac, 200 * frac, 0 )

        return true

    entities[ "item_healthcharger" ] = ( entity, dlight ) ->
        dlight\SetRadius( 32 )
        dlight\SetParent( entity )
        dlight\SetBrightness( 0.5 )
        dlight\SetLightColor( 0, 255, 255 )
        dlight\SetLocalPos( offset2 )

        dlight.LightThink = ->
            unless IsValid( entity )
                dlight\Remove!
                return

            frac = 1 - entity\GetCycle!
            dlight\SetLightColor( 0, 255 * frac, 255 * frac )

        return true
